spring.application.name=springboot-kafka

# Server settings
server.port=8096
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: myGroup
# this use if current offset does not exist any more on the server
# authomatically reset to the offset to the earlist offset
spring.kafka.consumer.auto-offset-reset: earliest
# Deserialization is the process of converting the raw byte data-
# -from Kafka messages into meaningful Java objects that your application can process
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
# This is from spring kafka library not from kafka library
# Json Byte Array into Java Object by using this
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
# This means kafka consumer can deserialize all the classes from this package
spring.kafka.consumer.properties.spring.json.trusted.packages=*


spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
# This is from spring kafka library not from kafka library
# Converts Java object to JSON and write to the Kafka topic
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name=javaguides
spring.kafka.topic-json.name=javaguides_json